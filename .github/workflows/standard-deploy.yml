name: Deploy standard package

on:
  push:
    branches:
      - master
    # paths:
    #   - 'packages/standard/**'
    #   - 'packages/common/**'
    #   - 'packages/webpack/**'
    #   - 'packages/babel/**'
    #   - 'packages/aws/src/stacks/Standard.ts'
    #   - 'packages/aws/src/index.ts'

jobs:
  standard-deploy:
    name: Deploy on AWS
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message , '[skip ci]')"

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12.16'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Get yarn cache dir
        id: get-yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn.lock
        id: yarn-cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.get-yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install
        run: |
          yarn config set unsafe-disable-integrity-migration true -g
          yarn install --frozen-lockfile --production=false --non-interactive --cache-folder $(yarn cache dir)
      - name: Deploy standard package
        run: |
          yarn standard:deploy
        env:
          - THRESHOLD: ${{ secrets.THRESHOLD }}
          - ABSOLUTELY_SURE_THRESHOLD: ${{ secrets.ABSOLUTELY_SURE_THRESHOLD }}
          - API_KEY: ${{ secrets.API_KEY }}
          - API_SECRET_KEY: ${{ secrets.API_SECRET_KEY }}
          - ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          - ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
